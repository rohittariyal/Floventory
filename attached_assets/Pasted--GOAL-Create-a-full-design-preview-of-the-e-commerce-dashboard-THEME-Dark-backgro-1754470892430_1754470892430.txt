// GOAL: Create a full design preview of the e-commerce dashboard
 
 
---
 
üé® THEME:
- Dark background: #0B0B0B
- Cards: #1A1A1A with rounded-xl, padding, soft drop shadows
- Text: White (#FFFFFF), Muted grey (#AAAAAA)
- Accent color: Light Green (#8BC34A) for highlights, borders, charts
- Font: Clean sans-serif like Inter or Poppins
- Responsive layout, use TailwindCSS for styling
 
---
 
üìä PANELS TO INCLUDE (Show All):
 
1Ô∏è‚É£ BusinessPulsePanel:
- Four KPI cards: Sales, Orders, Refunds, Ad ROI
- Line chart of 7-day trends
- AI Insight card with dummy message:
  ‚ÄúSales down 8% due to Amazon traffic drop‚Äù
 
2Ô∏è‚É£ InventoryBrainPanel:
- Table of SKUs: SKU ID, Name, Stock, Velocity, Days Left
- Low stock rows highlighted in red
- ‚ÄúReorder Now‚Äù button
 
3Ô∏è‚É£ SalesIntelligencePanel:
- Channel cards (Amazon, Flipkart, Shopify) with mini KPIs
- Bar chart: Top 5 SKUs
- Bar chart: Bottom 5 SKUs
- Pie chart: Return reasons
 
4Ô∏è‚É£ CustomerRadarPanel:
- New vs Returning buyers stat
- Sentiment gauge (smiley / neutral / sad face icons)
- Chart: Churn Risk (dummy segments: Low, Med, High)
 
5Ô∏è‚É£ AICopilotPanel:
- Box with prompt: ‚ÄúAsk your dashboard anything‚Ä¶‚Äù
- Display dummy GPT-style reply:
  ‚ÄúMargins dropped due to high refunds on SKU X‚Äù
 
6Ô∏è‚É£ ReturnAbusePanel:
- Table: Suspicious SKUs, Return Rate %, Flag (Low/Med/High)
- Highlight risky SKUs in red with ‚ö†Ô∏è icon
 
7Ô∏è‚É£ POGeneratorPanel:
- List of SKUs below reorder threshold
- Suggested PO draft card:
  SKU: X  
  Recommended Qty: 300  
  ETA: 5 days  
- Button: ‚ÄúSend PO‚Äù
 
---
 
üß± COMPONENT STRUCTURE (React)
 
Create each of the above panels as its own component:
```jsx
/components/dashboard/PanelBusinessPulse.jsx
/components/dashboard/PanelInventoryBrain.jsx
/components/dashboard/PanelSalesIntelligence.jsx
/components/dashboard/PanelCustomerRadar.jsx
/components/dashboard/PanelAICopilot.jsx
/components/dashboard/PanelReturnAbuse.jsx
/components/dashboard/PanelPOGenerator.jsx
 
 
// PROBLEM: After onboarding submission, the user is redirected to the dashboard,
// but the app sends them back to onboarding again to fill final steps they already completed.
 
// GOAL: Ensure that the onboardingComplete flag is saved in both backend AND frontend,
// and that the dashboard properly recognizes it before deciding to redirect again.
 
---
 
‚úÖ FIX IN BACKEND (Express):
- After saving onboarding data in POST /api/onboarding/save, update user object with:
  onboardingComplete: true
 
‚úÖ FIX IN FRONTEND (React):
1. After POST /api/onboarding/save is successful:
- Save onboardingComplete = true in localStorage or userContext
- Example:
```js
localStorage.setItem("onboardingComplete", true);
 
 